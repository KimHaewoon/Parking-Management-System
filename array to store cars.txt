; AddTwo.asm - adds two 32-bit integers.
; Chapter 3 example
INCLUDE Irvine32.inc

.data
opt byte "            *************************Welcome To Parking Management System************************************",0
opt1 byte "           ********************************Login as Admininstrator*********************************************",0
opt2 byte "Enter UserName: ",0
opt3 byte "Enter Password: ",0

msg1 Byte 0dh,0ah,"1. Park in  ",0 
msg2 Byte 0dh,0ah,"2. Park out  ",0
msg3 Byte 0dh,0ah,"3. Logout  ",0
msg4 Byte 0dh,0ah,"---------- YOUR VEHICLE IS PARKED IN ----------",0
msg5 Byte 0dh,0ah,"---------- YOUR VEHICLE IS PARKED OUT ----------",0
op Byte 0dh,0ah,"-> Menu:  ",0
op1 Byte 0dh,0ah,"1. Motorbike  ",0
op2 Byte 0dh,0ah,"2. Car  ",0
op3 Byte 0dh,0ah,"3. Van  ",0
op4 Byte 0dh,0ah,"4. Back  ",0
op5 Byte 0dh,0ah,"5. Exit  ",0
data1 Byte 0dh,0ah,"Enter your bike's number in Format [XXX-00-X00]:  ",0
date0 Byte 0dh,0ah,"Fill out following entry date details:  ",0
date1 Byte 0dh,0ah,"Enter DateIn in format [19-03-2019]: ",0
date2 Byte 0dh,0ah,"Enter DateOut in format [19-03-2019]: ",0

data3 Byte 0dh,0ah,"Enter your car's number [XXX-00-X00]:  ",0
data5 Byte 0dh,0ah,"Enter your van's number [XXX-00-X00]:  ",0
data7 Byte 0dh,0ah,"--------------------- Thanks for coming! Have a nice day. --------------------  ",0
header2 Byte 0dh,0ah,"-> Which vehicle you want to park out:  ",0
callamount Byte 0dh,0ah,"Totalamount is:  ",0

msg6 db "there is more space: ",0
msg7 db "the total amount is: ",0
msg8 db "the total numbers of vehicles parked: ",0
msg9 db "the total number of bikes parked: ",0
msg10 db "the total number of cars parked: ",0
msg11 db "the total number of vans parked ",0
msg12 db "***Record deleted successfully***",0
msg13 db "Wrong Password or username Enter Again",0
msg14 db "Successfully Login ",0

tvacy dword 5
tamount dword 0
;totalcount dword  0
bikeamount dword 100
caramount dword 150
vanamount dword 200
totalamount dword ?

occvacancy dword 0
loopcontrolvar dword 0


count Dword 0
number Dword ?
datein dword ?
monthin dword ?
yearin dword ?
password byte 20 dup(?)
username byte 20 dup(?)

total dword 150 dup(?) 

passfile byte "password.txt",0 


fhandler dword ?




tempuser byte 20 dup(?)
temppass byte 20 dup (?)


carno byte 55 dup(0)
adin byte 55 dup(0)
adout byte 55 dup(0)



vNo byte 11 dup(0)
din byte 11 dup(0)
dout byte 11 dup(0)

siz dword 11   ;used to calculate next variable
cal dword ?    ;calculate where is the next variable in array
.code

main proc

call crlf
mov edx,offset opt                         
call writestring                            ;------To Write 
call crlf                                   ;      welcm msg-----
call crlf


; *********************** MAIN PAGE ************************
mainpage:
			mov edx, offset msg1						; showing parkin option
			call WriteString

			mov edx, offset msg2						; showing parkout option
			call WriteString

			mov edx, offset msg3						; showing logout option
			call WriteString
			call crlf
			call readint								; Input option to parkin, park out or to logout
			cmp eax, 2									; check what user wants (parkin, parkout, logout)

			jl parkin


; ********************* PARKING IN CONDITION *********************

		parkin:										; Condition for parking in
			mov edx, offset op
			call WriteString
			call crlf
			mov edx, offset op1
			call WriteString

			mov edx, offset op2
			call WriteString

			mov edx, offset op3
			call WriteString

			mov edx, offset op4
			call WriteString

			mov edx, offset op5
			call WriteString
			call crlf
			call readint				; Input vehicle you want to park or exit from page
				
			cmp eax, 5					; ---- check what user wants 
			je _exit					; park bike, car or van
			cmp eax, 4					; or to go back -----
			je mainpage
			cmp eax, 2
				
			jl Tbike
			je Tcar
			jg Tvan
			
			;jmp parkin						; Returning back to parking in options
				
				

; ***************************** TAGS FOR PARKING IN ************************************

	Tbike:
		call parkbike
		jmp parkin
	Tcar:
		call parkcar
		jmp parkin
	Tvan:
		call parkvan
		jmp parkin



; ***************************** EXIT PROGRAM ************************************
			_exit:									; Condition for exiting system
				mov edx, offset data7
				call WriteString
				call crlf
				exit
				main ENDP 



; ******************************************************************************************
; ********************************** P R O C E D U R E S ***********************************
; ******************************************************************************************
 
 ; ********* P A R K I N G - B I K E ********* 
 parkbike PROC												; Condition for parking bike
						mov edx, offset data1
						call WriteString

						mov edx,offset vNo
						mov ecx,sizeof vNo
						call readstring

						mov edx, offset vNo
						call WriteString

						;mov edx,offset vNo
						;mov esi, offset carno
						mov ecx,sizeof vNo

						mov eax,occvacancy
						mul siz
						mov cal,eax
						call writeint
						mov esi,eax
						mov edx,0
						copy:
					    mov al, vNo[edx]
					    mov carno[esi],al
						inc edx
						inc esi
						loop copy

						inc occvacancy
						mov esi,11
						mov al , carno[esi]
						call writechar
	
						mov esi,0
						mov ecx,22
						co:
					    mov al, carno[esi]
						call writechar
						inc esi
						loop co

						ret

parkbike ENDP

; ********* P A R K I N G - C A R ********* 
parkcar PROC												; Condition for parking car
						mov edx, offset data3
						call WriteString

						ret
parkcar ENDP

; ********* P A R K I N G - V A N ********* 
parkvan PROC												; Condition for parking van
						mov edx, offset data5
						call WriteString

						ret
parkvan ENDP



;           ***************************************************************************************************
;           ************************************ P R O C E D U R E S ******************************************
;           ***************************************************************************************************


END main

